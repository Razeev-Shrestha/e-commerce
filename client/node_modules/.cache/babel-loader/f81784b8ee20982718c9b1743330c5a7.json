{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\frontend\\\\ecommerce\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { usestate } from 'react'; // import { connect } from 'react-redux';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { SignUpContainer, TitleContainer } from './sign-up.style';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.util'; // import {signUpStart } from '../../redux/user/user.actions';\n\nconst SignUp = () => {\n  const [userCredentials, setUserCredentials] = usestate({\n    UserName: '',\n    email: '',\n    Password: '',\n    confirmPassword: ''\n  });\n  const {\n    UserName,\n    email,\n    Password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // const { signUpStart } = this.props;\n\n    if (Password !== confirmPassword) {\n      alert(\"passwords don't match !!\");\n      return;\n    } // signUpStart({ UserName, email, Password });\n\n\n    try {\n      const {\n        user\n      } = await auth.createUserWithEmailAndPassword(email, Password);\n      await createUserProfileDocument(user, {\n        UserName\n      });\n      setUserCredentials({ ...userCredentials,\n        UserName: '',\n        email: '',\n        Password: '',\n        confirmPassword: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(SignUpContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TitleContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Sign Up With Your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"UserName\",\n    value: UserName,\n    onChange: handleChange,\n    label: \"User Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"Password\",\n    name: \"Password\",\n    value: Password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"Password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"SIGN UP \")));\n}; // const mapDispatchToProps = dispatch => ({\n//     signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n// });\n// export default connect(null,mapDispatchToProps)(SignUp);\n\n\nexport default SignUp;","map":{"version":3,"sources":["E:/react/frontend/ecommerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","usestate","FormInput","CustomButton","SignUpContainer","TitleContainer","auth","createUserProfileDocument","SignUp","userCredentials","setUserCredentials","UserName","email","Password","confirmPassword","handleSubmit","event","preventDefault","alert","user","createUserWithEmailAndPassword","error","console","handleChange","name","value","target"],"mappings":"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","sourcesContent":["import React, { usestate } from 'react';\r\n// import { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {SignUpContainer,TitleContainer } from './sign-up.style';\r\nimport {auth, createUserProfileDocument } from '../../firebase/firebase.util';\r\n\r\n// import {signUpStart } from '../../redux/user/user.actions';\r\n\r\nconst SignUp=()=>{\r\n    const [userCredentials, setUserCredentials] = usestate({\r\n        UserName: '',\r\n        email: '',\r\n        Password: '',\r\n        confirmPassword: ''\r\n    });\r\n    const { UserName, email, Password, confirmPassword } = userCredentials;\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        \r\n        // const { signUpStart } = this.props;\r\n        \r\n        if (Password !== confirmPassword) {\r\n            alert(\"passwords don't match !!\");\r\n            return;\r\n        }\r\n          // signUpStart({ UserName, email, Password });\r\n        try {\r\n            const { user } = await auth.createUserWithEmailAndPassword(email, Password);\r\n\r\n            await createUserProfileDocument(user, { UserName });\r\n\r\n            setUserCredentials({...userCredentials,\r\n                UserName: '',\r\n                email: '',\r\n                Password: '',\r\n                confirmPassword: ''\r\n            });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target;\r\n        setUserCredentials({...userCredentials,[name]: value });\r\n    };\r\n    \r\n    return (\r\n            <SignUpContainer>\r\n                <TitleContainer>I do not have a account</TitleContainer>\r\n                <span>Sign Up With Your email and password</span>\r\n                <form className='sign-up-form' onSubmit={handleSubmit}>\r\n                    <FormInput\r\n                        type='text'\r\n                        name='UserName'\r\n                        value={UserName}\r\n                        onChange={handleChange}\r\n                        label='User Name'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={handleChange}\r\n                        label='email'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='Password'\r\n                        name='Password'\r\n                        value={Password}\r\n                        onChange={handleChange}\r\n                        label='Password'\r\n                        required\r\n                    />\r\n                    <FormInput\r\n                        type='Password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={handleChange}\r\n                        label='Confirm Password'\r\n                        required\r\n                    />\r\n                    <CustomButton type='submit'>SIGN UP </CustomButton>\r\n                </form>\r\n            </SignUpContainer>\r\n        );\r\n}\r\n \r\n// const mapDispatchToProps = dispatch => ({\r\n//     signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n// });\r\n\r\n// export default connect(null,mapDispatchToProps)(SignUp);\r\n\r\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}