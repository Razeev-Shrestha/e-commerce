{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpSuccess, SignUpFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.util';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\n;\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n;\nexport function* signUp({\n  payload: email,\n  password,\n  displayName\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(SignUpFailure(error));\n  }\n}\n;\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["E:/react/frontend/ecommerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpSuccess","SignUpFailure","auth","googleProvider","createUserProfileDocument","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","additionalData","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","signInAfterSignUp","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put,all,call} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport {\r\n    signInSuccess,\r\n    signInFailure,\r\n    signOutFailure,\r\n    signOutSuccess,\r\n    signUpSuccess,\r\n    SignUpFailure\r\n} from './user.actions';\r\n\r\nimport { auth, googleProvider,createUserProfileDocument,getCurrentUser} from '../../firebase/firebase.util';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try{\r\n    const userRef = yield call(createUserProfileDocument, userAuth);\r\n    const userSnapshot = yield userRef.get();\r\n    yield put(signInSuccess({id:userSnapshot.id,...userSnapshot.data()}))\r\n    } catch (error) {\r\n    yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* signInWithEmail({payload:{email,password}}) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n};\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch(error){\r\n        yield put(signOutFailure(error));\r\n    }\r\n};\r\n\r\nexport function* signUp({payload:email,password,displayName}) {\r\n    try {\r\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\r\n        yield put(signUpSuccess({ user, additionalData: { displayName } }));\r\n    } catch (error) {\r\n        yield put(SignUpFailure(error));\r\n    }\r\n};\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut)\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START,signUp)\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS,signInAfterSignUp)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(isUserAuthenticated),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}