{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\frontend\\\\ecommerce\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPage from '../collection/collection.component';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport CollectionsOverviewContainer from '../../components/collection-overview/collections-overview.container';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.action';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass shopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n  /* component=>render to pass props */\n\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 41\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(shopPage);","map":{"version":3,"sources":["E:/react/frontend/ecommerce/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","WithSpinner","CollectionPage","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionsOverviewContainer","fetchCollectionsStartAsync","CollectionPageWithSpinner","shopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,wBAAR,QAAwC,UAAxC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAAQC,0BAAR,EAAmCC,yBAAnC,QAAmE,gCAAnE;AAEA,OAAOC,4BAAP,MAA0C,qEAA1C;AAEA,SAAQC,0BAAR,QAAyC,8BAAzC;AAEA,MAAMC,yBAAyB,GAAGN,WAAW,CAACC,cAAD,CAA7C;;AAGA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEJ,MAAAA;AAAF,QAAiC,KAAKK,KAA5C;AACAL,IAAAA,0BAA0B;AAC7B;AAED;;;AACAM,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAAQC,MAAAA,oBAAR;AAA+BC,MAAAA;AAA/B,QAAsD,KAAKJ,KAAjE;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,MADT;AAEI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAFxB;AAGI,MAAA,MAAM,EAAGL,KAAD,iBACJ,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAGG;AAA5C,SAAsEH,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAQI,oBAAC,KAAD;AACI,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBADxB;AAEI,MAAA,MAAM,EAAGL,KAAD,iBAAY,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAG,CAACI;AAAxC,SAAiEJ,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAgBH;;AAzBkC;;AA4BvC,MAAMM,eAAe,GAAGjB,wBAAwB,CAAC;AAC7Cc,EAAAA,oBAAoB,EAAEX,0BADuB;AAE7CY,EAAAA,mBAAmB,EAACX;AAFyB,CAAD,CAAhD;;AAKA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACrCb,EAAAA,0BAA0B,EAAC,MAAIa,QAAQ,CAACb,0BAA0B,EAA3B;AADF,CAAL,CAAnC;;AAIA,eAAeP,OAAO,CAACkB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CV,QAA5C,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {createStructuredSelector } from 'reselect';\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nimport {selectIsCollectionFetching,selectIsCollectionsLoaded} from '../../redux/shop/shop.selector';\r\n\r\nimport CollectionsOverviewContainer  from '../../components/collection-overview/collections-overview.container';\r\n\r\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.action';\r\n\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\n\r\nclass shopPage extends React.Component {\r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } = this.props;\r\n        fetchCollectionsStartAsync();\r\n    }\r\n\r\n    /* component=>render to pass props */\r\n    render() {\r\n        const { match,isCollectionFetching , isCollectionsLoaded} = this.props;\r\n        return (\r\n            <div className='shop-page'>\r\n                <Route\r\n                    exact\r\n                    path={`${match.path}`}\r\n                    render={(props) => (\r\n                        <CollectionsOverviewWithSpinner isLoading={ isCollectionFetching} {...props} />\r\n                    )}\r\n                />\r\n                <Route\r\n                    path={`${match.path}/:collectionId`}\r\n                    render={(props) => (<CollectionPageWithSpinner isLoading={ !isCollectionsLoaded} {...props} />\r\n                    )}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching,\r\n    isCollectionsLoaded:selectIsCollectionsLoaded\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   fetchCollectionsStartAsync:()=>dispatch(fetchCollectionsStartAsync())\r\n});\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(shopPage);\r\n\r\n"]},"metadata":{},"sourceType":"module"}